{\rtf1\ansi\ansicpg1252\cocoartf2820
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs26 \cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 apiVersion: apps/v1\
kind: Deployment\
metadata:\
  name: aegis-orchestrator\
  labels:\
    app: aegis\
spec:\
  replicas: 3\
  selector:\
    matchLabels:\
      app: aegis\
  template:\
    metadata:\
      labels:\
        app: aegis\
    spec:\
      containers:\
      - name: aegis-orchestrator\
        image: your-registry/aegis-orchestrator:latest # Pushed to a cloud-agnostic registry\
        ports:\
        - containerPort: 8000\
        env:\
          # CLOUD-AGNOSTIC CONFIG: Secrets and configs are mounted from environment-specific sources\
          - name: REDIS_HOST\
            valueFrom:\
              secretKeyRef:\
                name: aegis-secrets\
                key: redis-host\
          - name: REDIS_PORT\
            value: "6379"\
          - name: MODEL_STORAGE_BUCKET\
            value: "aegis-models" # Name is the same, backend is configured elsewhere\
          - name: STORAGE_PROVIDER # e.g., 's3', 'azure', 'gcs'\
            valueFrom:\
              secretKeyRef:\
                name: aegis-secrets\
                key: storage-provider\
        resources:\
          requests:\
            memory: "512Mi"\
            cpu: "250m"\
          limits:\
            memory: "2Gi"\
            cpu: "1000m"\
        livenessProbe:\
          httpGet:\
            path: /health\
            port: 8000\
          initialDelaySeconds: 30\
          periodSeconds: 10\
---\
apiVersion: v1\
kind: Service\
metadata:\
  name: aegis-service\
spec:\
  selector:\
    app: aegis\
  ports:\
    - protocol: TCP\
      port: 8000\
      targetPort: 8000\
  type: LoadBalancer # This will create an external load balancer on any cloud\
}