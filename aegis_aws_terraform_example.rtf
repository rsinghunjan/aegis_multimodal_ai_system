{\rtf1\ansi\ansicpg1252\cocoartf2820
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 terraform \{\
  required_version = ">= 1.0"\
  # This backend config is cloud-specific, but the rest of the code can be similar.\
  backend "s3" \{\
    bucket = "my-aegis-tf-state-bucket"\
    key    = "aegis-cluster/terraform.tfstate"\
    region = "us-west-2"\
  \}\
  required_providers \{\
    aws = \{\
      source  = "hashicorp/aws"\
      version = "~> 5.0"\
    \}\
    kubernetes = \{\
      source  = "hashicorp/kubernetes"\
      version = "~> 2.23"\
    \}\
  \}\
\}\
\
# Provider configuration for AWS\
provider "aws" \{\
  region = var.region\
\}\
\
# Create an EKS cluster (This module would have its own .tf files)\
module "eks_cluster" \{\
  source = "./modules/eks"\
\
  cluster_name = "aegis-cluster"\
  # ... other vars\
\}\
\
# Create an S3 bucket for model storage\
resource "aws_s3_bucket" "aegis_models" \{\
  bucket = "aegis-models" # This universal name is referenced in the code\
\}\
\
# Create a Redis ElastiCache instance\
resource "aws_elasticache_cluster" "aegis_redis" \{\
  cluster_id           = "aegis-redis"\
  engine               = "redis"\
  node_type            = "cache.t4g.micro"\
  num_cache_nodes      = 1\
  parameter_group_name = "default.redis7"\
\}}